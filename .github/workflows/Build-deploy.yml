name: Build & Deploy to AKS

on:
  workflow_run:
    workflows: ["Terraform workflow"]
    types:
      - completed

env:
  CHART_PATH: "./charts/fullstack"

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      ACR_NAME: ${{ steps.set-vars.outputs.ACR_NAME }}
      AKS_NAME: ${{ steps.set-vars.outputs.AKS_NAME }}
      RG_NAME: ${{ steps.set-vars.outputs.RG_NAME }}
      CHART_OVERRIDE_PATH: ${{ steps.set-vars.outputs.CHART_OVERRIDE_PATH }}
      key_vault_name: ${{ vars.KEY_VAULT_NAME }}
      user_assigned_identity_client_id: ${{ vars.USER_ASSIGNED_IDENTITY_CLIENT_ID }}
      tenant_id: ${{ vars.TENANT_ID }}
    steps:
      - id: set-vars
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "ACR_NAME=${{ vars.PROD_ACR_NAME }}" >> $GITHUB_OUTPUT
            echo "AKS_NAME=${{ vars.PROD_AKS_NAME }}" >> $GITHUB_OUTPUT
            echo "RG_NAME=${{ vars.PROD_RG_NAME }}" >> $GITHUB_OUTPUT
            echo "CHART_OVERRIDE_PATH=./charts/values-prod.yaml" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            echo "ACR_NAME=${{ vars.STAGING_ACR_NAME }}" >> $GITHUB_OUTPUT
            echo "AKS_NAME=${{ vars.STAGING_AKS_NAME }}" >> $GITHUB_OUTPUT
            echo "RG_NAME=${{ vars.STAGING_RG_NAME }}" >> $GITHUB_OUTPUT
            echo "CHART_OVERRIDE_PATH=./charts/values-stage.yaml" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "ACR_NAME=${{ vars.DEV_ACR_NAME }}" >> $GITHUB_OUTPUT
            echo "AKS_NAME=${{ vars.DEV_AKS_NAME }}" >> $GITHUB_OUTPUT
            echo "RG_NAME=${{ vars.DEV_RG_NAME }}" >> $GITHUB_OUTPUT
            echo "CHART_OVERRIDE_PATH=./charts/values-dev.yaml" >> $GITHUB_OUTPUT
          else
            echo "Unknown branch. Exiting."
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: set-env
    env:
      ACR_NAME: ${{ needs.set-env.outputs.ACR_NAME }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Build & push frontend image
        run: |
          cd app/frontend
          IMAGE_TAG=${{ env.ACR_NAME }}.azurecr.io/frontend:${GITHUB_SHA}
          docker build --build-arg REACT_APP_API_URL="/" -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Build & push backend image
        run: |
          cd app/backend
          IMAGE_TAG=${{ env.ACR_NAME }}.azurecr.io/backend:${GITHUB_SHA}
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: [set-env, build]
    env:
      ACR_NAME: ${{ needs.set-env.outputs.ACR_NAME }}
      AKS_NAME: ${{ needs.set-env.outputs.AKS_NAME }}
      RG_NAME: ${{ needs.set-env.outputs.RG_NAME }}
      CHART_OVERRIDE_PATH: ${{ needs.set-env.outputs.CHART_OVERRIDE_PATH }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RG_NAME }}
          cluster-name: ${{ env.AKS_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Bake Helm chart
        uses: azure/k8s-bake@v2
        env:
          FRONTEND_REPO: ${{ env.ACR_NAME }}.azurecr.io/frontend
          BACKEND_REPO: ${{ env.ACR_NAME }}.azurecr.io/backend
          IMAGE_TAG: ${{ github.sha }}
          key_vault_name: ${{ vars.KEY_VAULT_NAME }}
          user_assigned_identity_client_id: ${{ vars.USER_ASSIGNED_IDENTITY_CLIENT_ID }}
          tenant_id: ${{ vars.TENANT_ID }}
        with:
          renderEngine: helm
          helmChart: ${{ env.CHART_PATH }}
          overrideFiles: ${{ env.CHART_OVERRIDE_PATH }}
          overrides: frontend-deployment.image.repository=${{ env.FRONTEND_REPO }},frontend-deployment.image.tag=${{ env.IMAGE_TAG }},backend-deployment.image.repository=${{ env.BACKEND_REPO }},backend-deployment.image.tag=${{ env.IMAGE_TAG }},tenantId=${{ env.tenant_id }},keyvaultName=${{ env.key_vault_name }},userAssignedIdentityID=${{ env.user_assigned_identity_client_id }},Placeholder
          helm-version: latest
        id: bake

      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ${{ env.FRONTEND_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.BACKEND_REPO }}:${{ env.IMAGE_TAG }}