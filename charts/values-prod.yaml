namespace: default # Namespace for the application

backend-deployment:
  name: backend
  replicaCount: 1
  image:
    repository: prodcontainer.azurecr.io/backend
    tag: latest
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 200m
      memory: 500Mi
  secretName:
    mongo: mongosecret
    backend: backendsecret

backendsecret:
  name: backendsecret
  type: Opaque
  data:
    NODE_ENV: "development"
    PORT: "4000"
    SECRET: "hackthoon"
    KEY: "idurar"
    JWT_SCHEME: "jwt"
    JWT_TOKEN_PREFIX: "Bearer"
    JWT_SECRET: "thiscanbechangedlater123654789"
    JWT_TOKEN_EXPIRATION: "18000000"
    JWT_TOKEN_HASH_ALGO: "SHA-256"

backend-service:
  name: backend-service
  spec:
    port: 4000
    targetPort: 4000
    protocol: TCP
    name: http
    type: ClusterIP

frontend-deployment:
  name: frontend
  replicaCount: 1
  image:
    repository: prodcontainer.azurecr.io/frontend
    tag: latest
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 200m
      memory: 500Mi
  secretName:
    frontend: frontendsecret

#React does not work with secrets at runtime, hence React_app_API_URL is set during build time.
#frontendsecret:
#  name: frontendsecret
#  type: Opaque
#  data:
#    REACT_APP_API_URL: "production/api/"

frontend-service:
  name: frontend-service
  selector:
    app: frontend
  spec:
    port: 80
    targetPort: 80

mongosecret:
  name: mongosecret
  type: Opaque
  data:
    MONGO_URL: "mongodb://mongo.default.svc.cluster.local:27017/mydb"
    MONGO_DB: "mydb"

mongo-service:
  name: mongo
  spec:
    port: 27017

mongo-statefulset:
  name: mongo
  replicas: 1
  container:
    image: mongo:5
  storage:
    size: 5Gi
    storageClassName: managed-premium
  volumeMounts:
    mountPath: /data/db
    name: mongo-storage
  resources:
    requests:
      cpu: 200m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi
  spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: managed-premium


ingressController:
  name: ingress-nginx-controller
  image: registry.k8s.io/ingress-nginx/controller:v1.15.0
  replicas: 1
  ports:
    http: 80
    https: 443

nginxIngress:
  name: app-ingress
  host: "" # leave empty if no custom domain
  annotations:
    rewriteTarget: "/$2"
    sslRedirect: "false"
  paths:
    backend:
      path: "/api"
      service: backend-service
      port: 4000
    frontend:
      path: "/"
      service: frontend-service
      port: 80

Placeholder: ""
