namespace: default

backend-deployment:
  name: backend
  replicaCount: 1
  image:
    repository: prodcontainer.azurecr.io/backend
    tag: latest
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 200m
      memory: 500Mi
  secretName:
    mongo: mongo-secret
    backend: backend-secret
  volumes:
    name: secrets-store-inline
    driver: secrets-store.csi.k8s.io
    readOnly: true
    secretProviderClass: "fullstack-secrets"
    mountPath: /mnt/secrets-store

backend-service:
  name: backend-service
  spec:
    port: 4000
    targetPort: 4000
    protocol: TCP
    name: http
    type: ClusterIP

frontend-deployment:
  name: frontend
  replicaCount: 1
  image:
    repository: prodcontainer.azurecr.io/frontend
    tag: latest
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 200m
      memory: 500Mi
  secretName:
    frontend: frontend-secret

frontend-service:
  name: frontend-service
  selector:
    app: frontend
  spec:
    port: 80
    targetPort: 80

mongo-service:
  name: mongo
  spec:
    port: 27017

mongo-statefulset:
  name: mongo
  replicas: 1
  container:
    image: mongo:5
  storage:
    size: 5Gi
    storageClassName: standard
  volumeMounts:
    mountPath: /data/db
    name: mongo-storage
  resources:
    requests:
      cpu: 200m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi
  spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: standard

nginx-configmap:
  name: nginx-config
  data:
    nginxconf: |-
      server {
          listen 80;

          location / {
              proxy_pass http://frontend-service.default.svc.cluster.local:80;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }

          location /api/ {
            proxy_pass http://backend-service.default.svc.cluster.local:4000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
      }

nginx-deployment:
  name: nginx-proxy
  replicas: 1
  image: nginx:alpine
  resources:
    name: nginx
    requests:
      cpu: 50m
      memory: 100Mi
    limits:
      cpu: 100m
      memory: 200Mi
  volumeMounts:
    mountPath: /etc/nginx/conf.d
    name: nginx-config-volume
    subpath: nginx.conf
  ConfigMap:
    name: nginx-config

nginx-loadbalancer:
  name: nginx-proxy
  selector:
    app: nginx-proxy
  spec:
    port: 80
    targetPort: 80
    protocol: TCP
    type: LoadBalancer

secrets:
  secretProviderClass:
    name: fullstack-secrets
    provider: azure
    secretObjects:
      - secretName: mongo-secret
        type: Opaque
        data:
          - objectName: DATABASE
            key: DATABASE
          - objectName: MONGO-DB
            key: MONGO-DB
      - secretName: backend-secret
        type: Opaque
        data:
          - objectName: NODE-ENV
            key: NODE-ENV
          - objectName: PORT
            key: PORT
          - objectName: SECRET
            key: SECRET
          - objectName: KEY
            key: KEY
          - objectName: JWT-SCHEME
            key: JWT-SCHEME
          - objectName: JWT-TOKEN-PREFIX
            key: JWT-TOKEN-PREFIX
          - objectName: JWT-SECRET
            key: JWT-SECRET
          - objectName: JWT-TOKEN-EXPIRATION
            key: JWT-TOKEN-EXPIRATION
          - objectName: JWT-TOKEN-HASH-ALGO
            key: JWT-TOKEN-HASH-ALGO
    parameters:
      useVMManagedIdentity: "true"
      userAssignedIdentityID: ""
      usePodIdentity: "false"
      keyvaultName: ""
      cloudName: "AzurePublicCloud"
      tenantId: ""
      objects: |
        array:
          - |
            objectName: DATABASE
            objectType: secret
          - |
            objectName: MONGO-DB
            objectType: secret
          - |
            objectName: NODE-ENV
            objectType: secret
          - |
            objectName: PORT
            objectType: secret
          - |
            objectName: SECRET
            objectType: secret
          - |
            objectName: KEY
            objectType: secret
          - |
            objectName: JWT-SCHEME
            objectType: secret
          - |
            objectName: JWT-TOKEN-PREFIX
            objectType: secret
          - |
            objectName: JWT-SECRET
            objectType: secret
          - |
            objectName: JWT-TOKEN-EXPIRATION
            objectType: secret
          - |
            objectName: JWT-TOKEN-HASH-ALGO
            objectType: secret